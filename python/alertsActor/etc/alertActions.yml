# this file specifies what actor/key pairs raise alerts
# the actor and key are specified as actor.key
# for each actor/key, a cast and default severity must be specified
# casts are how to cast each keyword (e.g. int, str)
# the extra !!python/etc... is to read it in as a function
# many other optional keywords are available
# instrument: an associated insturment. the alert will be disabled
#             if said instrument is marked "down"
# heartbeat: use this keyword as a heartbeat (for specified actor)
# dangerVal: a list of values to raise an alert for, or a single
#            value if using above/below checker
# checkAfter: how long to wait before raising heartbeat alert
# emailAddresses: who to send email alerts to for this keyword
# phoneNumbers: who to text alerts for this keyword
# selfClear: is this alert allowed to disappear quietly if 
#            the conditions go away?
# checker: how to check alert keys, if one dangerVal isn't enough
#          if one dangerVal is enough, not needed

# #######################################
# apogee
# #######################################
apogee.ditherPosition: 
  cast: !!python/name:__builtin__.str
  severity: warn
  heartbeat: apogee
  checkAfter: 30
  emailAddresses: ['j.donor@tcu.edu']
  selfClear: True
  instrument: apogee
  # the {} is needed it seems. its empty to tell it to pass nothing to __init__
  checker: !!python/object/new:alertsActor.rules.dangerKey.heartbeatCheck {}
apogee.tempAlarms: 
  cast: !!python/name:__builtin__.int
  # cast: !!python/object:alertsActor.rules.specialCasts.listElem
  #   {cast: !!python/name:__builtin__.int }
  severity: critical
  instrument: apogee
  checker: !!python/object/new:alertsActor.rules.dangerKey.inList {}
apogee.vacuumAlarm: 
  cast: !!python/name:__builtin__.int
  dangerVal: 1
  severity: critical
  instrument: apogee
apogee.ln2Alarm: 
  cast: !!python/name:__builtin__.int
  dangerVal: 1
  severity: critical
  instrument: apogee
apogee.collIndexer: 
  cast: !!python/name:__builtin__.str
  dangerVal: Off
  severity: serious
  instrument: apogee
apogee.ditherIndexer: 
  cast: !!python/name:__builtin__.str
  dangerVal: Off
  severity: serious
  instrument: apogee

# # #######################################
# # apogeeql
# # #######################################
# apogeeql.rootURL:
#   cast: !!python/name:__builtin__.str
#   severity: warn
#   heartbeat: apogeeql
#   checkAfter: 75
#   selfClear: True
#   checker: !!python/object:alertsActor.rules.dangerKey.heartbeatCheck {}
# apogeeql.icsDiskAlarm:
#   cast: !!python/name:__builtin__.str
#   severity: warn
#   checker: !!python/object:alertsActor.rules.dangerKey.diskCheck {}
# apogeeql.qlDiskAlarm:
#   cast: !!python/name:__builtin__.str
#   severity: warn
#   checker: !!python/object:alertsActor.rules.dangerKey.diskCheck {}
# apogeeql.archDiskAlarm:
#   cast: !!python/name:__builtin__.str
#   severity: warn
#   checker: !!python/object:alertsActor.rules.dangerKey.diskCheck {}

# # #######################################
# # mcp
# # #######################################
# mcp.ab_status:
#   cast: !!python/object:alertsActor.rules.specialCasts.firstElem
#     {cast: !!python/name:__builtin__.int }
#   severity: serious
#   dangerVal: 0
#   checker: !!python/object:alertsActor.rules.dangerKey.neq {}
# mcp.needIack:
#   cast: !!python/name:__builtin__.int
#   severity: warn
#   dangerVal: 0
#   checker: !!python/object:alertsActor.rules.dangerKey.neq {}
# mcp.userId:
#   cast: !!python/name:__builtin__.str
#   severity: info
#   dangerVal: jeg
# mcp.aliveAt:
#   cast: !!python/name:__builtin__.str
#   severity: warn
#   heartbeat: mcp
#   checkAfter: 75
#   selfClear: True
#   checker: !!python/object:alertsActor.rules.dangerKey.heartbeatCheck {}

# # #######################################
# # tcc
# # #######################################
# # tcc.tccPos:
# #   cast: !!python/name:__builtin__.str
# #   severity: warn
# #   heartbeat: tcc
# #   checkAfter: 15
# # in the old actor, no TCC keywords raise alerts

# # #######################################
# # boss
# # #######################################
# boss.aliveAt:
#   cast: !!python/name:__builtin__.int
#   severity: warn
#   heartbeat: boss
#   checkAfter: 75
#   selfClear: True
#   checker: !!python/object:alertsActor.rules.dangerKey.heartbeatCheck {}
# boss.camCheck:
#   cast: !!python/name:__builtin__.list  # possibly tuple!
#   severity: warn
#   checker: !!python/object:alertsActor.rules.dangerKey.camCheck {}
